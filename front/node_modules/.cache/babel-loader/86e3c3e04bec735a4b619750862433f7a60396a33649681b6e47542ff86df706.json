{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-51906ab6\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"comments\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"留言\", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Add Comment\", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.comments.slice(1), comment => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: comment.id\n    }, [_createElementVNode(\"strong\", null, _toDisplayString(comment.userName), 1 /* TEXT */), _createTextVNode(\": \" + _toDisplayString(comment.comments), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers($event => $options.addComment($data.ID), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newCommentText = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newCommentText]]), _hoisted_3], 32 /* HYDRATE_EVENTS */)]);\n}","map":{"version":3,"names":["class","_createElementVNode","type","_createElementBlock","_hoisted_1","_hoisted_2","_Fragment","_renderList","$data","comments","slice","comment","key","id","_toDisplayString","userName","onSubmit","_cache","_withModifiers","$event","$options","addComment","ID","newCommentText","required","_hoisted_3"],"sources":["/Users/laken/Documents/GitHub/social-platforms/front/src/components/CommentSection.vue"],"sourcesContent":["<template>\n  <div class=\"comments\">\n    <h3>留言</h3>\n    <ul>\n      <li v-for=\"comment in comments.slice(1)\" :key=\"comment.id\">\n        <strong>{{ comment.userName }}</strong>: {{ comment.comments }}\n      </li>\n    </ul>\n    <form @submit.prevent=\"addComment(ID)\">\n      <input type=\"text\" v-model=\"newCommentText\" required>\n      <button type=\"submit\">Add Comment</button>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { addcomment } from \"@/api.js\";\nexport default {\n  props: {\n    initialComments: {\n      type: Array,\n      default: () => [],\n    },\n    initialID: {\n    type: String,\n    required: true\n  },\n  },\n  data() {\n    return {\n      comments: this.initialComments,\n      ID: this.initialID,\n      newCommentText: \"\",\n    };\n  },\n  methods: {\n    addComment() {\n      let postID = this.comments[0].postID;\n      addcomment({\n        content: this.newCommentText,\n        postID: postID\n      }).then(() => {\n        location.reload();\n        }).catch((error) => {\n          console.error(error);\n        });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.comments {\n  margin-top: 10px;\n  text-align: left;\n  color: #ffffff;\n}\n\nform {\n  margin-top: 10px;\n}\n\ninput[type=\"text\"] {\n  width: 140px;\n  padding: 5px;\n}\nbutton {\n    display: inline-block;\n    text-align: center;\n    vertical-align: middle;\n    padding: 6px 12px;\n    border: 1px solid #584388;\n    border-radius: 8px;\n    background: #a67eff;\n    background: -moz-linear-gradient(top, #a67eff, #584388);\n    background: linear-gradient(to bottom, #a67eff, #584388);\n    -webkit-box-shadow: #c797ff 0px 0px 40px 0px;\n    -moz-box-shadow: #c797ff 0px 0px 40px 0px;\n    box-shadow: #c797ff 0px 0px 40px 0px;\n    text-shadow: #342850 1px 1px 1px;\n    font: normal normal bold 10px arial;\n    color: #ffffff;\n    text-decoration: none;\n    width: 140px;\n    height: 30px;\n}\nbutton:hover {\n    border: 1px solid ##684fa0;\n    background: #c797ff;\n    background: -moz-linear-gradient(top, #c797ff, #6a50a3);\n    background: linear-gradient(to bottom, #c797ff, #6a50a3);\n    color: #ffffff;\n    text-decoration: none;\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAU;gEACnBC,mBAAA,CAAW,YAAP,IAAE;gEAQJA,mBAAA,CAA0C;EAAlCC,IAAI,EAAC;AAAQ,GAAC,aAAW;;;uBATrCC,mBAAA,CAWM,OAXNC,UAWM,GAVJC,UAAW,EACXJ,mBAAA,CAIK,c,kBAHHE,mBAAA,CAEKG,SAAA,QAAAC,WAAA,CAFiBC,KAAA,CAAAC,QAAQ,CAACC,KAAK,KAAzBC,OAAO;yBAAlBR,mBAAA,CAEK;MAFqCS,GAAG,EAAED,OAAO,CAACE;QACrDZ,mBAAA,CAAuC,gBAAAa,gBAAA,CAA5BH,OAAO,CAACI,QAAQ,kB,iBAAY,IAAE,GAAAD,gBAAA,CAAGH,OAAO,CAACF,QAAQ,iB;oCAGhER,mBAAA,CAGO;IAHAe,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,CAAAC,MAAA,IAAUC,QAAA,CAAAC,UAAU,CAACb,KAAA,CAAAc,EAAE;sBAClCrB,mBAAA,CAAqD;IAA9CC,IAAI,EAAC,MAAM;+DAAUM,KAAA,CAAAe,cAAc,GAAAJ,MAAA;IAAEK,QAAQ,EAAR;iDAAhBhB,KAAA,CAAAe,cAAc,E,GAC1CE,UAA0C,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}